
[
	Exposed = Window
] interface HubbleNode : HubbleXobj {

	// Message API
	void sendMessageToGrid(HubbleXobj msg);
	void sendMessageToGrid(HubbleNode node);

	void GetControlsNames(ApplicationCallback callback);
	void ShowWebContent(DOMString strParentDivName, DOMString strDivName);
	//Control Bind Api:
	void setControlVal(DOMString CtrlID, long long CtrlHandle, DOMString strVal);

	//Node API
	HubbleNode getChild(long nIndex);
	HubbleNode getChild(long row, long col);
	HubbleNode getChild(DOMString strName);
	HubbleNode getGrid(DOMString strName);
	void Observe(DOMString strKey, DOMString xml, [DefaultValue = Undefined] optional ApplicationCallback callback);
	void ObserveEx(DOMString strKey, DOMString xml, [DefaultValue = Undefined] optional long row, [DefaultValue = Undefined] optional long col, [DefaultValue = Undefined] optional ApplicationCallback callback);
	void ObserveCtrl(DOMString strCtrlName, DOMString strKey, DOMString xml, [DefaultValue = Undefined] optional ApplicationCallback callback);

	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long row;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long col;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long rows;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long cols;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long long handle;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long long hwnd;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute DOMString objtype;

	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleNode root;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleNode parentGrid;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleGalaxy parentGalaxy;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleWinform parentForm;

	// Event handler attributes
	attribute EventHandler onHubbleControlCreated;
	attribute EventHandler onMdiChildActivate;
	attribute EventHandler onWinFormClosed;
	attribute EventHandler onCloudMessageForGrid;
};
