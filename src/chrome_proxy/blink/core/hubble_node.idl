
[
	Exposed = Window
] interface HubbleNode : EventTarget {

	// Message API
	void sendMessage([DefaultValue = Undefined] optional HubbleXobj msg,
		[DefaultValue = Undefined] optional ApplicationCallback callback);
	void sendMessageToGrid(HubbleXobj msg);
	void sendMessageToGrid(HubbleNode node);
	void addEventListener(DOMString eventName, ApplicationCallback callback);
	void addEventListener(DOMString subObjName, DOMString eventName, ApplicationCallback callback);
	void removeEventListener(DOMString eventName);

	void GetControlsNames(ApplicationCallback callback);
	void SyncCtrlTextChange(DOMString strcontrols, [DefaultValue = Undefined] optional ApplicationCallback callback);
	void ShowWebContent(DOMString strParentDivName, DOMString strDivName);
	//Control Bind Api:
	void setControlVal(DOMString CtrlID, long long CtrlHandle, DOMString strVal);

	//Node API
	void DispatchGridEvent(Element elem, DOMString eventName);
	void DispatchGridEvent(HubbleXobj xObj, DOMString ctrlName, DOMString eventName);
	DOMString getStr(DOMString strKey);
	void setStr(DOMString strKey, DOMString value);
	long getLong(DOMString strKey);
	void setLong(DOMString strKey, long value);
	long long getInt64(DOMString strKey);
	void setInt64(DOMString strKey, long long value);
	float getFloat(DOMString strKey);
	void setFloat(DOMString strKey, float value);
	HubbleNode getChild(long nIndex);
	HubbleNode getChild(long row, long col);
	HubbleNode getChild(DOMString strName);
	HubbleNode getGrid(DOMString strName);
	void Observe(DOMString strKey, DOMString xml, [DefaultValue = Undefined] optional ApplicationCallback callback);
	void ObserveEx(DOMString strKey, DOMString xml, [DefaultValue = Undefined] optional long row, [DefaultValue = Undefined] optional long col, [DefaultValue = Undefined] optional ApplicationCallback callback);
	void ObserveCtrl(DOMString strCtrlName, DOMString strKey, DOMString xml, [DefaultValue = Undefined] optional ApplicationCallback callback);

	attribute DOMString msgID;
	attribute Element workElement;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] attribute DOMParser xmlParse;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute Document doc;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long row;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long col;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long rows;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long cols;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long long handle;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long long hwnd;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleXobj xobj;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute DOMString name;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute DOMString objtype;

	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleNode root;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleNode parentGrid;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleGalaxy parentGalaxy;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute HubbleWinform parentForm;

	// Event handler attributes
	attribute EventHandler onMessageReceived;
	attribute EventHandler onGridCreated;
	attribute EventHandler onHubbleControlCreated;
	attribute EventHandler onMdiChildActivate;
	attribute EventHandler onWinFormClosed;
	attribute EventHandler onCloudMessageForGrid;
};
