typedef sequence<any> ObjectArray;

[
	Exposed = Window
] interface Hubble : HubbleXobj {

	// Message API
	void wait(boolean bwait);
	void sendMessage(DOMString id, DOMString param1, DOMString param2, 
		[DefaultValue = Undefined] optional DOMString param3, 
		[DefaultValue = Undefined] optional DOMString param4, 
		[DefaultValue = Undefined] optional DOMString param5);
	void sendMessage(HubbleXobj msg,
		[DefaultValue = Undefined] optional ApplicationCallback callback, 
		[DefaultValue = Undefined] optional  boolean bwait);
	void openUrl(DOMString url, long nBrowserWndOpenDisposition,
		[DefaultValue = Undefined] optional ApplicationCallback callback, 
		[DefaultValue = Undefined] optional  boolean bwait);
	void Observe(DOMString key, DOMString strXml, [DefaultValue = Undefined] optional ApplicationCallback callback);

	// DOM API
	void defineElement(DOMString tagName, DOMString html);
	void renderElement(DOMString tagName, DOMString html);

	//HubbleNode API
	HubbleXobj newVar([DefaultValue = Undefined] optional DOMString name);
	HubbleNode getGrid(Element elem, [DefaultValue = Undefined] optional HubbleXobj grid);
	HubbleNode getGrid(long long nodeHandle);
	HubbleNode getGrid(DOMString galaxyName, [DefaultValue = Undefined] optional DOMString clusterName, [DefaultValue = Undefined] optional DOMString gridName);
	HubbleGalaxy getGalaxy(DOMString wndName);
	HubbleGalaxy getGalaxy(long long wndHandle);
	void OnMessage(Element elem, DOMString eventName);

	//HubbleWinForm API
	HubbleWinform createWinForm(DOMString strFormXml, 
		long FormType, 
		[DefaultValue = Undefined] optional ApplicationCallback callback);

	[Affects = Nothing] getter HubbleXobj ? getNamedItem(DOMString name);
	[RaisesException, CEReactions] HubbleXobj ? setNamedItem(HubbleXobj var);
	[RaisesException, CEReactions] void setNamedItem(DOMString name, HubbleXobj var);

	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute DOMString url;

	// Event handler attributes
	attribute EventHandler onGridCreated;
	attribute EventHandler onLoadWinForm;
	attribute EventHandler onLoadMdiWinForm;
	attribute EventHandler onGalaxyCreated;
	attribute EventHandler onWinFormClosed;
	attribute EventHandler onBindCLRObject;
	attribute EventHandler onMdiChildActivate;
	attribute EventHandler onMessageReceived;
	attribute EventHandler onCosmosObjectCreated;
	attribute EventHandler onCloudMessageForObject;
	attribute EventHandler onHubbleMessageReceived;
};
